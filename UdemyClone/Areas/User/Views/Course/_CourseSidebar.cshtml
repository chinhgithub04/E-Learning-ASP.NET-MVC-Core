@model LearnViewModel

<!-- Sidebar Header -->
<div class="border-b border-gray-700 p-4">
    <h3 class="mb-2 text-lg font-semibold">Course Content</h3>
    <div class="text-sm text-gray-400">
        @Model.CourseSections.Count sections • @Model.TotalVideos lectures
    </div>
</div>

<!-- Course Sections -->
<div class="flex-1 overflow-y-auto">
    @foreach (var s in Model.CourseSections)
    {
        var completedVideosInSection = s.CourseVideos.Count(v => Model.VideoProgresses.Any(vp => vp.CourseVideoId == v.Id && vp.IsCompleted));
        var totalVideosInSection = s.CourseVideos.Count;

        <div class="border-b border-gray-700">
            <!-- Section Header -->
            <div class="bg-gray-750 section-header cursor-pointer p-4 transition-colors hover:bg-gray-700"
                 data-section-id="@s.Id">
                <div class="flex items-center justify-between">
                    <div class="flex-1">
                        <h4 class="font-medium text-white">Section @s.DisplayOrder: @s.Title</h4>
                        <div class="mt-1 text-sm text-gray-400">
                            @completedVideosInSection/@totalVideosInSection lectures
                            @{
                                var sectionDuration = s.CourseVideos.Where(v => v.Duration.HasValue).Sum(v => v.Duration.Value.TotalMinutes);
                                if (sectionDuration > 0)
                                {
                                    var hours = (int)(sectionDuration / 60);
                                    var minutes = (int)(sectionDuration % 60);
                                    var durationText = hours > 0 ? $"{hours}hr{minutes}min" : $"{minutes}min";
                                    <span>• @durationText</span>
                                }
                            }
                        </div>
                    </div>
                    <i class="fas fa-chevron-down section-chevron transform text-gray-400 transition-transform"></i>
                </div>
            </div>

            <!-- Section Videos -->
            <div class="section-content">
                @foreach (var video in s.CourseVideos.OrderBy(v => v.DisplayOrder))
                {
                    var videoProgress = Model.VideoProgresses.FirstOrDefault(vp => vp.CourseVideoId == video.Id);
                    var isCurrentVideo = video.Id == Model.CurrentVideo.Id;
                    var isCompleted = videoProgress?.IsCompleted == true;
                    var hasResources = video.CourseResources?.Any() == true;

                    <div class="video-item relative block cursor-pointer border-l-4 p-4 transition-colors hover:bg-gray-700 @(isCurrentVideo ? "border-orange-500 bg-gray-700" : "border-transparent")"
                         data-video-id="@video.Id"
                         onclick="loadVideo('@video.Id')">
                        <div class="flex items-center space-x-3">
                            <!-- Checkbox for completion status -->
                            <div class="flex-shrink-0">
                                <input type="checkbox"
                                       class="video-checkbox h-5 w-5 rounded border-gray-500 bg-gray-700 text-green-600 focus:ring-2 focus:ring-green-500"
                                       data-video-id="@video.Id"
                                       @(isCompleted ? "checked" : "")
                                       onclick="event.stopPropagation(); toggleVideoCompletion('@video.Id', this)" />
                            </div>

                            <!-- Video Info -->
                            <div class="min-w-0 flex-1">
                                <div class="flex items-center justify-between">
                                    <h5 class="truncate text-sm font-medium text-white @(isCurrentVideo ? "text-orange-400" : "")">
                                        @video.DisplayOrder. @video.Title
                                    </h5>
                                    @if (hasResources)
                                    {
                                        <div class="relative">
                                            <button type="button"
                                                    class="resources-dropdown-toggle ml-2 flex cursor-pointer items-center rounded p-1 text-xs text-gray-400 transition-colors hover:bg-gray-600 hover:text-white"
                                                    onclick="event.stopPropagation(); toggleResourcesDropdown(this)"
                                                    title="View resources (@video.CourseResources.Count)">
                                                <i class="fas fa-paperclip"></i>
                                                <span class="ml-1">@video.CourseResources.Count</span>
                                                <i class="fas fa-chevron-down ml-1 text-xs transition-transform"></i>
                                            </button>

                                            <!-- Resources Dropdown -->
                                            <div class="resources-dropdown absolute top-full right-0 z-50 mt-1 hidden w-80 rounded-lg border border-gray-600 bg-gray-800 shadow-lg">
                                                <div class="border-b border-gray-600 p-3">
                                                    <div class="flex items-center justify-between">
                                                        <h6 class="text-sm font-medium text-gray-200">Course Resources</h6>
                                                        <span class="text-xs text-gray-400">@video.CourseResources.Count file(s)</span>
                                                    </div>
                                                </div>
                                                <div class="max-h-64 overflow-y-auto p-2">
                                                    @foreach (var resource in video.CourseResources)
                                                    {
                                                        <div class="flex items-center justify-between rounded p-2 text-sm transition-colors hover:bg-gray-700">
                                                            <div class="flex min-w-0 flex-1 items-center space-x-3">
                                                                <div class="flex h-8 w-8 flex-shrink-0 items-center justify-center rounded bg-blue-100">
                                                                    <i class="fas fa-file text-xs text-blue-600"></i>
                                                                </div>
                                                                <div class="min-w-0 flex-1">
                                                                    <div class="truncate font-medium text-gray-200" title="@resource.ResourceName">
                                                                        @resource.ResourceName
                                                                    </div>
                                                                    @if (resource.ResourceSizeInBytes.HasValue)
                                                                    {
                                                                        <div class="text-xs text-gray-400">
                                                                            @{
                                                                                var sizeInMB = resource.ResourceSizeInBytes.Value / (1024.0 * 1024.0);
                                                                                var formattedSize = sizeInMB >= 1 ? $"{sizeInMB:F1} MB" : $"{resource.ResourceSizeInBytes.Value / 1024.0:F1} KB";
                                                                            }
                                                                            @formattedSize
                                                                        </div>
                                                                    }
                                                                </div>
                                                            </div>
                                                            <a href="@Url.Action("DownloadResource", "Course", new { id = resource.Id })"
                                                               class="download-resource ml-3 flex-shrink-0 rounded bg-orange-600 px-3 py-1.5 text-xs text-white transition-colors hover:bg-orange-700"
                                                               onclick="event.stopPropagation()"
                                                               title="Download @resource.ResourceName">
                                                                <i class="fas fa-download mr-1"></i>
                                                                Download
                                                            </a>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div class="mt-1 flex items-center space-x-2 text-xs text-gray-400">
                                    <i class="fas fa-video"></i>
                                    @if (video.Duration.HasValue)
                                    {
                                        <span>@video.Duration.Value.ToString(@"mm\:ss")</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>