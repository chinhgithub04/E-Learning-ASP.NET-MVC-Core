@model InstructorStatsViewModel

<div class="space-y-6">
    @if (Model.Course?.Instructor != null)
    {
        <div class="flex items-start space-x-6 rounded-lg border border-gray-200 bg-white p-6 shadow-sm">
            <!-- Avatar -->
            <div class="flex-shrink-0">
                @if (!string.IsNullOrEmpty(Model.Course.Instructor.ApplicationUser.AvatarUrl))
                {
                    <img src="@Model.Course.Instructor.ApplicationUser.AvatarUrl" 
                         alt="@Model.Course.Instructor.ApplicationUser.FirstName @Model.Course.Instructor.ApplicationUser.LastName" 
                         class="h-24 w-24 rounded-full object-cover ring-4 ring-orange-100">
                }
                else
                {
                    <div class="flex h-24 w-24 items-center justify-center rounded-full bg-gradient-to-br from-orange-400 to-orange-600 ring-4 ring-orange-100">
                        <span class="text-2xl font-bold text-white">
                            @(Model.Course.Instructor.ApplicationUser.FirstName?.Substring(0, 1))@(Model.Course.Instructor.ApplicationUser.LastName?.Substring(0, 1))
                        </span>
                    </div>
                }
            </div>

            <div class="flex-1 space-y-3">
                <!-- Name -->
                <div>
                    <a href="#" class="text-2xl font-bold text-gray-900 underline hover:text-orange-500">
                        @Model.Course.Instructor.ApplicationUser.FirstName @Model.Course.Instructor.ApplicationUser.LastName
                    </a>
                    @if (!string.IsNullOrEmpty(Model.Course.Instructor.HeadLine))
                    {
                        <p class="text-lg font-medium text-gray-600">@Model.Course.Instructor.HeadLine</p>
                    }
                </div>

                <div class="flex flex-wrap items-center gap-6 text-sm text-gray-600">
                    <div class="flex items-center space-x-2">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-video-icon lucide-video h-4 w-4 text-orange-500"><path d="m16 13 5.223 3.482a.5.5 0 0 0 .777-.416V7.87a.5.5 0 0 0-.752-.432L16 10.5" /><rect x="2" y="6" width="14" height="12" rx="2" /></svg>
                        <span>@Model.TotalCourses Course@(Model.TotalCourses != 1 ? "s" : "")</span>
                    </div>

                    @if (Model.TotalStudents > 0)
                    {
                        <div class="flex items-center space-x-2">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-users-icon lucide-users h-4 w-4 text-orange-500"><path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" /><path d="M16 3.128a4 4 0 0 1 0 7.744" /><path d="M22 21v-2a4 4 0 0 0-3-3.87" /><circle cx="9" cy="7" r="4" /></svg>
                            <span>@Model.TotalStudents.ToString("N0") Student@(Model.TotalStudents != 1 ? "s" : "")</span>
                        </div>
                    }

                    @if (Model.TotalRatings > 0)
                    {
                        <div class="flex items-center space-x-2">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-star-icon lucide-star h-4 w-4 text-orange-500"><path d="M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z" /></svg>
                            <span>@Model.AverageRating.ToString("F1") (@Model.TotalRatings.ToString("N0") Rating@(Model.TotalRatings != 1 ? "s" : ""))</span>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.Course.Instructor.ApplicationUser.Email))
                    {
                        <div class="flex items-center space-x-2">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-orange-500">
                                <rect width="20" height="16" x="2" y="4" rx="2"/>
                                <path d="m22 7-10 5L2 7"/>
                            </svg>
                            <span class="break-all">@Model.Course.Instructor.ApplicationUser.Email</span>
                        </div>
                    }
                </div>

                @if (!string.IsNullOrEmpty(Model.Course.Instructor.Website))
                {
                    <div class="flex items-center space-x-2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-orange-500">
                            <circle cx="12" cy="12" r="10"/>
                            <path d="m2 12 20 0"/>
                            <path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"/>
                        </svg>
                        <a href="@Model.Course.Instructor.Website" target="_blank" rel="noopener noreferrer" 
                           class="font-medium text-orange-600 hover:text-orange-700 hover:underline">
                            Visit Website
                        </a>
                    </div>
                }
            </div>
        </div>

        @if (!string.IsNullOrEmpty(Model.Course.Instructor.Biography))
        {
            <div class="rounded-lg border border-gray-200 bg-white p-6 shadow-sm">
                <h3 class="mb-4 text-xl font-bold text-gray-900">About the Instructor</h3>
                <div class="prose max-w-none leading-relaxed text-gray-700">
                    @Html.Raw(Model.Course.Instructor.Biography.Replace("\n", "<br>"))
                </div>
            </div>
        }

        @if (Model.Course.Instructor.Courses != null && Model.Course.Instructor.Courses.Any())
        {
            var otherCourses = Model.Course.Instructor.Courses.Where(c => c.Id != Model.Course.Id).Take(3);
            if (otherCourses.Any())
            {
                <div class="rounded-lg border border-gray-200 bg-white p-6 shadow-sm">
                    <h3 class="mb-4 text-xl font-bold text-gray-900">More Courses by this Instructor</h3>
                    <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
                        @foreach (var course in otherCourses)
                        {
                            <div class="group cursor-pointer rounded-lg border border-gray-200 p-4 transition-all hover:border-orange-200 hover:shadow-md">
                                @if (!string.IsNullOrEmpty(course.ImageUrl))
                                {
                                    <img src="@course.ImageUrl" alt="@course.Title" class="mb-3 h-32 w-full rounded-md object-cover">
                                }
                                <h4 class="mb-2 line-clamp-2 font-semibold text-gray-900 group-hover:text-orange-600">
                                    @course.Title
                                </h4>
                                @if (course.Price.HasValue && course.Price > 0)
                                {
                                    <p class="font-bold text-orange-600">@course.Price.Value.ToString("C")</p>
                                }
                                else
                                {
                                    <p class="font-bold text-green-600">Free</p>
                                }
                            </div>
                        }
                    </div>
                </div>
            }
        }
    }
    else
    {
        <div class="py-8 text-center">
            <div class="text-gray-500">
                <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="mx-auto mb-4 text-gray-300">
                    <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
                    <circle cx="12" cy="7" r="4"/>
                </svg>
                <p class="text-lg font-medium">No instructor information available</p>
                <p class="text-sm">Instructor details will be displayed here when available.</p>
            </div>
        </div>
    }
</div>