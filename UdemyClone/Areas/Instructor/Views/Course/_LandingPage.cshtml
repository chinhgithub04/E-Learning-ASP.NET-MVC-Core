@model LandingPageViewModel
<div class="w-full">
    <div class="mb-8">
        <h2 class="mb-2 text-2xl font-bold text-gray-900">Course Landing Page</h2>
        <p class="text-gray-600">Your course landing page is crucial to your success on EduPress. If it's done right, it can also help you gain visibility in search engines like Google. As you complete this section, think about creating a compelling Course Landing Page that demonstrates why someone would want to enroll in your course. Learn more about <a href="#" class="text-blue-600 underline">creating your course landing page</a> and <a href="#" class="text-blue-600 underline">course title standards.</a></p>
    </div>

    <form class="space-y-8" id="landing-page-form" enctype="multipart/form-data">
        <input type="hidden" name="CourseId" value="@Model.Course.Id" />

        <!-- Course Title -->
        <div>
            <label asp-for="Course.Title" class="mb-2 block text-sm font-medium text-gray-700">Course Title</label>
            <input asp-for="Course.Title" name="Title" type="text" class="w-full rounded-lg border border-gray-300 px-4 py-3 outline-none focus:border-orange-500 focus:ring-2 focus:ring-orange-500" placeholder="Insert your course title">
            <span name="title-validation" class="hidden text-sm font-medium text-red-600">Title cannot be empty</span>
            <p class="mt-2 text-sm text-gray-500">Your title should be a mix of attention-grabbing, informative, and optimized for search</p>
        </div>

        <!-- Course Subtitle -->
        <div>
            <label class="mb-2 block text-sm font-medium text-gray-700">Course Subtitle</label>
            <input asp-for="Course.Subtitle" name="Subtitle" type="text" class="w-full rounded-lg border border-gray-300 px-4 py-3 outline-none focus:border-orange-500 focus:ring-2 focus:ring-orange-500" placeholder="Insert your course subtitle">
            <span asp-validation-for="Course.Subtitle" class="text-sm font-medium text-red-600"></span>
            <p class="mt-2 text-sm text-gray-500">Use 1 or 2 related keywords, and mention 3-4 of the most important areas that you'll cover during your course.</p>
        </div>

        <!-- Course Description -->
        <div>
            <label class="mb-2 block text-sm font-medium text-gray-700">Course Description</label>
            <div class="rounded-lg border border-gray-300">
                <textarea id="course-description" asp-for="Course.Description" name="Description" rows="8" class="w-full resize-none border-0 p-4 focus:ring-0"
                          placeholder="Insert your course description"></textarea>
            </div>
            <p class="mt-2 text-sm text-gray-500">Description should have minimum 200 words.</p>
        </div>

        <!-- Basic Info Section -->
        <div>
            <h3 class="mb-4 text-lg font-semibold text-gray-900">Basic Info</h3>
            <div class="grid grid-cols-1 gap-6 md:grid-cols-3">
                <!-- Course Level -->
                <div>
                    <label class="mb-2 block text-sm font-medium text-gray-700">Course Level</label>
                    <div class="relative">
                        <button type="button" id="courseLevelDropdown" class="flex w-full cursor-pointer items-center justify-between rounded-lg border border-gray-300 bg-white px-4 py-3 text-left shadow-sm transition-all hover:border-orange-400 focus:border-orange-500 focus:ring-2 focus:ring-orange-500 focus:outline-none">
                            <span id="courseLevelText" class="text-gray-900">
                                @{
                                    var selectedLevel = Model.LevelList.FirstOrDefault(l => l.Value == Model.Course.CourseLevelId);
                                }
                                @(selectedLevel?.Text ?? "Select Level")
                            </span>
                            <svg class="h-5 w-5 text-gray-400 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>
                        <div id="courseLevelMenu" class="absolute z-10 mt-1 hidden w-full rounded-lg border border-gray-200 bg-white shadow-lg">
                            <div class="max-h-60 overflow-auto">
                                <div class="cursor-pointer px-4 py-2 text-gray-900 hover:bg-orange-50 hover:text-orange-600" data-value="" data-text="Select Level">
                                    Select Level
                                </div>
                                @foreach (var level in Model.LevelList.Where(l => !string.IsNullOrEmpty(l.Value)))
                                {
                                    <div class="cursor-pointer px-4 py-2 text-gray-900 hover:bg-orange-50 hover:text-orange-600 @(Model.Course.CourseLevelId == level.Value ? "bg-orange-50 text-orange-600" : "")" 
                                         data-value="@level.Value" data-text="@level.Text">
                                        @level.Text
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <input type="hidden" name="CourseLevelId" id="selectedCourseLevelId" value="@Model.Course.CourseLevelId" />
                    <span name="course-level-validation" class="hidden text-sm font-medium text-red-600">Please select your course's level</span>
                </div>

                <!-- Category -->
                <div>
                    <label class="mb-2 block text-sm font-medium text-gray-700">Category</label>
                    <div class="relative">
                        <button type="button" id="categoryDropdown" class="flex w-full cursor-pointer items-center justify-between rounded-lg border border-gray-300 bg-white px-4 py-3 text-left shadow-sm transition-all hover:border-orange-400 focus:border-orange-500 focus:ring-2 focus:ring-orange-500 focus:outline-none">
                            <span id="categoryText" class="text-gray-900">
                                @{
                                    var selectedCategory = Model.CategoryList.FirstOrDefault(c => c.Value == Model.Course.CategoryId);
                                }
                                @(selectedCategory?.Text ?? "Select Category")
                            </span>
                            <svg class="h-5 w-5 text-gray-400 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>
                        <div id="categoryMenu" class="absolute z-10 mt-1 hidden w-full rounded-lg border border-gray-200 bg-white shadow-lg">
                            <div class="max-h-60 overflow-auto">
                                <div class="cursor-pointer px-4 py-2 text-gray-900 hover:bg-orange-50 hover:text-orange-600" data-value="" data-text="Select Category">
                                    Select Category
                                </div>
                                @foreach (var category in Model.CategoryList.Where(c => !string.IsNullOrEmpty(c.Value)))
                                {
                                    <div class="cursor-pointer px-4 py-2 text-gray-900 hover:bg-orange-50 hover:text-orange-600 @(Model.Course.CategoryId == category.Value ? "bg-orange-50 text-orange-600" : "")" 
                                         data-value="@category.Value" data-text="@category.Text">
                                        @category.Text
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <input type="hidden" name="CategoryId" id="selectedCategoryId" value="@Model.Course.CategoryId" />
                    <span name="category-validation" class="hidden text-sm font-medium text-red-600">Please select your course's category</span>
                </div>

                <!-- Subcategory -->
                <div id="subcategoryContainer" class="@(Model.Course?.CategoryId != null ? "" : "hidden")">
                    <label class="mb-2 block text-sm font-medium text-gray-700">Subcategory</label>
                    <div class="relative">
                        <button type="button" id="subcategoryDropdown" class="flex w-full cursor-pointer items-center justify-between rounded-lg border border-gray-300 bg-white px-4 py-3 text-left shadow-sm transition-all hover:border-orange-400 focus:border-orange-500 focus:ring-2 focus:ring-orange-500 focus:outline-none">
                            <span id="subcategoryText" class="text-gray-900">
                                @{
                                    var selectedSubcategory = Model.SubcategoryList.FirstOrDefault(s => s.Value == Model.Course.SubcategoryId);
                                }
                                @(selectedSubcategory?.Text ?? "Select Subcategory")
                            </span>
                            <svg class="h-5 w-5 text-gray-400 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>
                        <div id="subcategoryMenu" class="absolute z-10 mt-1 hidden w-full rounded-lg border border-gray-200 bg-white shadow-lg">
                            <div class="max-h-60 overflow-auto">
                                <div class="cursor-pointer px-4 py-2 text-gray-900 hover:bg-orange-50 hover:text-orange-600" data-value="" data-text="Select Subcategory">
                                    Select Subcategory
                                </div>
                                @if (Model.Course?.CategoryId != null)
                                {
                                    @foreach (var subcategory in Model.SubcategoryList.Where(s => !string.IsNullOrEmpty(s.Value)))
                                    {
                                        <div class="cursor-pointer px-4 py-2 text-gray-900 hover:bg-orange-50 hover:text-orange-600 @(Model.Course.SubcategoryId == subcategory.Value ? "bg-orange-50 text-orange-600" : "")" 
                                             data-value="@subcategory.Value" data-text="@subcategory.Text">
                                            @subcategory.Text
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <input type="hidden" name="SubcategoryId" id="selectedSubcategoryId" value="@Model.Course.SubcategoryId" />
                    <span name="subcategory-validation" class="hidden text-sm font-medium text-red-600">Please select your course's subcategory</span>
                </div>
            </div>
        </div>

        <!-- Course Image Section -->
        <div>
            <h3 class="mb-4 text-lg font-semibold text-gray-900">Course Image</h3>
            <div class="rounded-lg border border-gray-300 p-6">
                <div class="flex items-start space-x-6">
                    <!-- Image Preview with Drag & Drop -->
                    <div class="relative flex-shrink-0">
                        <div id="image-drop-zone" class="flex h-56 w-80 cursor-pointer items-center justify-center rounded-lg border-2 border-dashed border-gray-300 bg-gray-50 transition-colors hover:border-orange-400 hover:bg-orange-50">
                            <div id="text-image-preview" class="text-center @(Model.Course.ImageUrl != null ? "hidden" : "")">
                                <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                </svg>
                                <p class="mt-2 text-sm text-gray-500">Course Image Preview</p>
                                <p class="text-xs text-gray-400">750 x 422 px</p>
                                <p class="mt-1 text-xs text-blue-600">Drag & drop image here or click to upload</p>
                            </div>
                        </div>

                        <!-- Hidden Image Preview -->
                        <img id="course-image-preview" class="@(Model.Course.ImageUrl != null ? "" : "hidden") absolute inset-0 h-56 w-80 rounded-lg object-cover ring-2 ring-orange-500" src="@Model.Course.ImageUrl" alt="Course image preview">

                        <!-- Hidden Circular Progress Bar -->
                        <div id="image-upload-progress" class="absolute inset-0 flex hidden items-center justify-center rounded-lg bg-black opacity-50">
                            <div class="relative">
                                <svg class="h-16 w-16 -rotate-90 transform" viewBox="0 0 64 64">
                                    <circle cx="32" cy="32" r="28" stroke="currentColor" stroke-width="4" fill="none" class="text-gray-300" />
                                    <circle cx="32" cy="32" r="28" stroke="currentColor" stroke-width="4" fill="none"
                                            class="image-progress text-orange-500" stroke-linecap="round"
                                            stroke-dasharray="176" stroke-dashoffset="176" />
                                </svg>
                                <div class="absolute inset-0 flex items-center justify-center">
                                    <span class="text-sm font-medium text-white">0%</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Upload Controls and Guidelines -->
                    <div class="flex-1">
                        <div class="mb-4 space-x-2">
                            <input name="ImageFile" type="file" id="course-image" accept="image/*" class="hidden">
                            <button id="upload-image-btn" type="button" class="@(Model.Course.ImageUrl != null ? "hidden" : "") cursor-pointer rounded-lg border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:ring-2 focus:ring-orange-500 focus:outline-none">
                                Upload Image
                            </button>
                            <!-- Hidden Crop Image Button -->
                            <button type="button" id="crop-image-btn" class="hidden cursor-pointer rounded-lg border border-orange-300 bg-orange-50 px-4 py-2 text-sm font-medium text-orange-700 hover:bg-orange-100 focus:ring-2 focus:ring-orange-500 focus:outline-none">
                                Crop Image
                            </button>
                            <!-- Hidden Change Image Button -->
                            <button type="button" id="change-image-btn" class="@(Model.Course.ImageUrl != null ? "" : "hidden") cursor-pointer rounded-lg border border-blue-300 bg-blue-50 px-4 py-2 text-sm font-medium text-blue-700 hover:bg-blue-100 focus:ring-2 focus:ring-blue-500 focus:outline-none">
                                Change Image
                            </button>
                        </div>

                        <div class="space-y-2 text-sm text-gray-600">
                            <h4 class="font-medium">Image Requirements:</h4>
                            <ul class="space-y-1 text-xs">
                                <li>• Size: 750x422 pixels (16:9 aspect ratio)</li>
                                <li>• Format: JPG, PNG, or GIF</li>
                                <li>• File size: Maximum 2MB</li>
                                <li>• High quality and clear image</li>
                                <li>• No text overlay recommended</li>
                            </ul>
                        </div>

                        <div class="mt-4 rounded-md bg-blue-50 p-3">
                            <div class="flex">
                                <svg class="h-5 w-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                                </svg>
                                <div class="ml-3">
                                    <p class="text-xs text-blue-700">
                                        <strong>Tip:</strong> A good course image can increase enrollment by up to 50%. Choose an image that represents your course content and appeals to your target audience.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Promotional Video Section -->
        <div>
            <h3 class="mb-4 text-lg font-semibold text-gray-900">Promotional Video</h3>
            <div class="rounded-lg border border-gray-300 p-6">
                <div class="flex items-start space-x-6">
                    <!-- Video Preview with Drag & Drop -->
                    <div class="relative flex-shrink-0">
                        <div id="video-drop-zone" class="flex h-56 w-80 cursor-pointer items-center justify-center rounded-lg border-2 border-dashed border-gray-300 bg-gray-50 transition-colors hover:border-orange-400 hover:bg-orange-50">
                            <div id="text-video-preview" class="text-center @(Model.Course.PromotionVideoUrl != null ? "hidden" : "")">
                                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                                </svg>
                                <p class="mt-2 text-sm text-gray-500">Video Preview</p>
                                <p class="text-xs text-gray-400">16:9 aspect ratio</p>
                                <p class="mt-1 text-xs text-blue-600">Drag & drop video here or click to upload</p>
                            </div>
                        </div>

                        <!-- Hidden Video Preview -->
                        <video id="promotional-video-preview" class="@(Model.Course.PromotionVideoUrl != null ? "" : "hidden") absolute inset-0 h-56 w-80 rounded-lg object-cover ring-2 ring-orange-500" controls>
                            <source src="@Model.Course.PromotionVideoUrl" />Your browser does not support the video tag.
                        </video>

                        <!-- Hidden Circular Progress Bar -->
                        <div id="video-upload-progress" class="absolute inset-0 flex hidden items-center justify-center rounded-lg bg-black opacity-50">
                            <div class="relative">
                                <svg class="h-16 w-16 -rotate-90 transform" viewBox="0 0 64 64">
                                    <circle cx="32" cy="32" r="28" stroke="currentColor" stroke-width="4" fill="none" class="text-gray-300" />
                                    <circle cx="32" cy="32" r="28" stroke="currentColor" stroke-width="4" fill="none"
                                            class="video-progress text-orange-500" stroke-linecap="round"
                                            stroke-dasharray="176" stroke-dashoffset="176" />
                                </svg>
                                <div class="absolute inset-0 flex items-center justify-center">
                                    <span class="text-sm font-medium text-white">0%</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Upload Controls and Guidelines -->
                    <div class="flex-1">
                        <div class="mb-4 space-x-2">
                            <input name="VideoFile" type="file" id="promotional-video" accept="video/*" class="hidden">
                            <button id="upload-video-btn" type="button" class="@(Model.Course.PromotionVideoUrl != null ? "hidden" : "") cursor-pointer rounded-lg border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:ring-2 focus:ring-orange-500 focus:outline-none">
                                Upload Video
                            </button>
                            <!-- Hidden Change Video Button -->
                            <button type="button" id="change-video-btn" class="@(Model.Course.PromotionVideoUrl != null ? "" : "hidden") cursor-pointer rounded-lg border border-blue-300 bg-blue-50 px-4 py-2 text-sm font-medium text-blue-700 hover:bg-blue-100 focus:ring-2 focus:ring-blue-500 focus:outline-none">
                                Change Video
                            </button>
                        </div>

                        <div class="space-y-2 text-sm text-gray-600">
                            <h4 class="font-medium">Video Requirements:</h4>
                            <ul class="space-y-1 text-xs">
                                <li>• Duration: 30 seconds to 2 minutes</li>
                                <li>• Format: MP4, MOV, or AVI</li>
                                <li>• Resolution: Minimum 720p (1280x720)</li>
                                <li>• File size: Maximum 500MB</li>
                                <li>• Good audio quality</li>
                                <li>• Engaging and informative content</li>
                            </ul>
                        </div>

                        <div class="mt-4 rounded-md bg-green-50 p-3">
                            <div class="flex">
                                <svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                                </svg>
                                <div class="ml-3">
                                    <p class="text-xs text-green-700">
                                        <strong>Best Practice:</strong> Create a compelling promotional video that showcases what students will learn. Include a brief introduction, course highlights, and a clear call to action.
                                    </p>
                                </div>
                            </div>
                        </div>

                        <div class="mt-3 rounded-md bg-yellow-50 p-3">
                            <div class="flex">
                                <svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                                </svg>
                                <div class="ml-3">
                                    <p class="text-xs text-yellow-700">
                                        <strong>Note:</strong> A promotional video is highly recommended but optional. Courses with promotional videos tend to have higher enrollment rates.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </form>
</div>